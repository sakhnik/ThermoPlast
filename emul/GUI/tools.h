#ifndef _TOOLS
#define _TOOLS

/*********************************************************
 *   Робота з декою, яка використовується для реалізації *
 * черги та стеку. Оскільки пам"ять -- це дуже критич-   *
 * ний параметр, довелося написати дуже економний ва-    *
 * ріант.                                                *
 *   Всі функції повертають 1 у випадку вдалого заверше- *
 * ння операції та 0 -- у протилежному                   *
 *********************************************************/

struct CDeque
{
	unsigned int deque_head, deque_tail, deque_max;
	void **deque_data;
};

/***********************************************************
 *   Дека порожня?                                         *
 ***********************************************************/
int DequeIsEmpty(const struct CDeque *Deque);

/***********************************************************
 *   Дека заповнена?                                       *
 ***********************************************************/
int DequeIsFull(const struct CDeque *Deque);

/***********************************************************
 *   Додати до хвоста деки                                 *
 ***********************************************************/
int AddToDequeTail(void *Item, struct CDeque *Deque);

/***********************************************************
 *   Взяти елемент з голови деки                           *
 ***********************************************************/
int GetFromDequeHead(void **Item, struct CDeque *Deque);

/***********************************************************
 *   Додати до голови деки                                 *
 ***********************************************************/
int AddToDequeHead(void *Item, struct CDeque *Deque);

/***********************************************************
 *   Взяти елемент з хвоста деки                           *
 ***********************************************************/
int GetFromDequeTail(void **Item, struct CDeque *Deque);

#endif
